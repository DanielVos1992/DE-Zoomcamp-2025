services:
  python_app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./app/data:/app/data
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ny_taxi 
    ports:
      - "8888:8888" 
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root 

  ingest_data:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./app/data:/app/data
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ny_taxi 
    command: /bin/bash -c "python pipeline_yellow.py && python pipeline_green.py &&  python zones.py"

  postgres:                                      
    image: postgres:16                            
    environment:                                  
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - "5433:5432"                               
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh

  pgadmin:
    image: dpage/pgadmin4                         
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com     
      - PGADMIN_DEFAULT_PASSWORD=admin            
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json
    ports:
      - "8081:80"                                 
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./servers.json:/pgadmin4/servers.json

  kestra:
    image: kestra/kestra:latest
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: postgres
            password: password
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io"
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8082/
    ports:
      - "8082:8080"
      - "8083:8081"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  kestra-data:
    driver: local